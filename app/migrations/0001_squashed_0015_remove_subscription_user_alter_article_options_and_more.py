# Generated by Django 4.2.24 on 2025-10-01 00:15

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# app.migrations.0008_add_excerpt_slug

class Migration(migrations.Migration):

    replaces = [('app', '0001_initial'), ('app', '0002_remove_review_uq_review_course_user_and_more'), ('app', '0003_payment_paid_at_payment_receipt_payment_verified_at_and_more'), ('app', '0004_add_created_at_fields'), ('app', '0005_add_updated_at_category'), ('app', '0006_wishlist_created_at_and_fill_kaspi'), ('app', '0007_create_articles_materials'), ('app', '0009_fix_material_slug_like_index'), ('app', '0008_add_excerpt_slug'), ('app', '0010_merge_20250929_2243'), ('app', '0012_add_article_body_and_material_description'), ('app', '0013_sync_with_supabase'), ('app', '0014_sync_with_supabase'), ('app', '0015_remove_subscription_user_alter_article_options_and_more')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Иконка')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Контактное сообщение',
                'verbose_name_plural': 'Контактные сообщения',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='URL')),
                ('short_description', models.TextField(verbose_name='Краткое описание')),
                ('description', models.TextField(verbose_name='Полное описание')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Цена')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена со скидкой')),
                ('duration', models.CharField(max_length=50, verbose_name='Продолжительность')),
                ('image', models.ImageField(blank=True, null=True, upload_to='courses/images/', verbose_name='Изображение')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='courses/thumbnails/', verbose_name='Миниатюра')),
                ('level', models.CharField(choices=[('beginner', 'Начинающий'), ('intermediate', 'Средний'), ('advanced', 'Продвинутый')], default='beginner', max_length=20, verbose_name='Уровень')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('review', 'На проверке'), ('published', 'Опубликован')], default='draft', max_length=20, verbose_name='Статус')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемый')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Популярный')),
                ('requirements', models.TextField(blank=True, verbose_name='Требования')),
                ('what_you_learn', models.TextField(blank=True, verbose_name='Чему научитесь')),
                ('language', models.CharField(default='Русский', max_length=50, verbose_name='Язык')),
                ('certificate', models.BooleanField(default=True, verbose_name='Сертификат')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='app.category', verbose_name='Категория')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses_created', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, related_name='enrolled_courses', to=settings.AUTH_USER_MODEL, verbose_name='Студенты')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, verbose_name='URL')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('video_url', models.URLField(blank=True, verbose_name='Видео URL')),
                ('duration', models.CharField(blank=True, max_length=50, verbose_name='Продолжительность')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_free', models.BooleanField(default=False, verbose_name='Бесплатный')),
                ('resources', models.FileField(blank=True, null=True, upload_to='lessons/resources/', verbose_name='Ресурсы')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlisted_by', to='app.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='app.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('kaspi_invoice_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='ID платежа Kaspi')),
                ('status', models.CharField(choices=[('pending', 'В ожидании'), ('success', 'Успешно'), ('failed', 'Неудачно')], default='pending', max_length=10, verbose_name='Статус')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='app.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='app.course')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модули',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('percent', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='app.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Прогресс по уроку',
                'verbose_name_plural': 'Прогресс по урокам',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='app.module'),
        ),
        migrations.CreateModel(
            name='InstructorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(verbose_name='Биография')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='instructors/avatars/', verbose_name='Аватар')),
                ('specialization', models.CharField(max_length=200, verbose_name='Специализация')),
                ('experience', models.PositiveIntegerField(default=0, verbose_name='Опыт работы (лет)')),
                ('website', models.URLField(blank=True, verbose_name='Вебсайт')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('twitter', models.URLField(blank=True, verbose_name='Twitter')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Подтвержден')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль инструктора',
                'verbose_name_plural': 'Профили инструкторов',
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='app.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Запись на курс',
                'verbose_name_plural': 'Записи на курсы',
            },
        ),
        migrations.AddConstraint(
            model_name='wishlist',
            constraint=models.UniqueConstraint(fields=('user', 'course'), name='uq_wishlist_user_course'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('course', 'user'), name='uq_review_course_user'),
        ),
        migrations.AddConstraint(
            model_name='lessonprogress',
            constraint=models.UniqueConstraint(fields=('user', 'lesson'), name='uq_lessonprogress_user_lesson'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.UniqueConstraint(fields=('module', 'slug'), name='uq_lesson_module_slug'),
        ),
        migrations.AddConstraint(
            model_name='enrollment',
            constraint=models.UniqueConstraint(fields=('user', 'course'), name='uq_enrollment_user_course'),
        ),
        migrations.RemoveConstraint(
            model_name='review',
            name='uq_review_course_user',
        ),
        migrations.RemoveField(
            model_name='course',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='lesson',
            name='duration',
        ),
        migrations.AddField(
            model_name='course',
            name='duration_hours',
            field=models.PositiveIntegerField(default=0, verbose_name='Продолжительность (часы)'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='duration_minutes',
            field=models.PositiveIntegerField(default=0, verbose_name='Длительность (мин.)'),
        ),
        migrations.AddField(
            model_name='review',
            name='age',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Возраст'),
        ),
        migrations.AddField(
            model_name='review',
            name='name',
            field=models.CharField(default='Аноним', max_length=100, verbose_name='Имя'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='review',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='reviews/photos/', verbose_name='Фото'),
        ),
        migrations.AddField(
            model_name='review',
            name='position',
            field=models.CharField(blank=True, max_length=200, verbose_name='Должность/Род занятий'),
        ),
        migrations.AlterField(
            model_name='review',
            name='rating',
            field=models.DecimalField(decimal_places=1, max_digits=2, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Рейтинг'),
        ),
        migrations.AlterField(
            model_name='review',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='paid_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Оплачено в'),
        ),
        migrations.AddField(
            model_name='payment',
            name='receipt',
            field=models.FileField(blank=True, null=True, upload_to='payments/receipts/', verbose_name='Чек/квитанция'),
        ),
        migrations.AddField(
            model_name='payment',
            name='verified_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Проверено в'),
        ),
        migrations.AddField(
            model_name='category',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='enrollment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lessonprogress',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='module',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='payment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='category',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='wishlist',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.RunSQL(
            sql="\n                UPDATE app_payment\n                SET kaspi_invoice_id = 'QR-LEGACY-' || id\n                WHERE kaspi_invoice_id IS NULL;\n            ",
            reverse_sql="\n                UPDATE app_payment\n                SET kaspi_invoice_id = NULL\n                WHERE kaspi_invoice_id LIKE 'QR-LEGACY-%';\n            ",
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('content', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=20)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to='materials/')),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS app_material_slug_c087ef9f_like;',
            reverse_sql='',
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS app_material_slug_c087ef9f_like;',
            reverse_sql='',
        ),
        migrations.AddField(
            model_name='article',
            name='excerpt',
            field=models.TextField(blank=True, verbose_name='Краткое описание'),
        ),
        migrations.AddField(
            model_name='material',
            name='slug',
            field=models.SlugField(blank=True, max_length=220, null=True, unique=True, verbose_name='Слаг'),
        ),
        migrations.RunPython(
            code=app.migrations.0008_add_excerpt_slug.backfill_material_slugs,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='material',
            name='slug',
            field=models.SlugField(blank=True, max_length=220, unique=True, verbose_name='Слаг'),
        ),
        migrations.RunSQL(
            sql="\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.columns\n        WHERE table_name='app_article' AND column_name='body'\n    ) THEN\n        ALTER TABLE app_article ADD COLUMN body text NULL;\n    END IF;\n\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.columns\n        WHERE table_name='app_material' AND column_name='description'\n    ) THEN\n        ALTER TABLE app_material ADD COLUMN description text NULL;\n    END IF;\nEND\n$$;\n",
            reverse_sql="\nDO $$\nBEGIN\n    IF EXISTS (\n        SELECT 1 FROM information_schema.columns\n        WHERE table_name='app_article' AND column_name='body'\n    ) THEN\n        ALTER TABLE app_article DROP COLUMN body;\n    END IF;\n\n    IF EXISTS (\n        SELECT 1 FROM information_schema.columns\n        WHERE table_name='app_material' AND column_name='description'\n    ) THEN\n        ALTER TABLE app_material DROP COLUMN description;\n    END IF;\nEND\n$$;\n",
        ),
        migrations.RemoveField(
            model_name='subscription',
            name='user',
        ),
        migrations.AlterModelOptions(
            name='article',
            options={'ordering': ['-published_at', '-created_at'], 'verbose_name': 'Статья', 'verbose_name_plural': 'Статьи'},
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ['name'], 'verbose_name': 'Категория', 'verbose_name_plural': 'Категории'},
        ),
        migrations.AlterModelOptions(
            name='contactmessage',
            options={'ordering': ['-created_at'], 'verbose_name': 'Сообщение контактов', 'verbose_name_plural': 'Сообщения контактов'},
        ),
        migrations.AlterModelOptions(
            name='lesson',
            options={'ordering': ['module__order', 'order', 'id'], 'verbose_name': 'Урок', 'verbose_name_plural': 'Уроки'},
        ),
        migrations.AlterModelOptions(
            name='lessonprogress',
            options={'verbose_name': 'Прогресс по уроку', 'verbose_name_plural': 'Прогресс по урокам'},
        ),
        migrations.AlterModelOptions(
            name='material',
            options={'ordering': ['-created_at'], 'verbose_name': 'Материал', 'verbose_name_plural': 'Материалы'},
        ),
        migrations.AlterModelOptions(
            name='module',
            options={'ordering': ['order', 'id'], 'verbose_name': 'Модуль', 'verbose_name_plural': 'Модули'},
        ),
        migrations.AlterModelOptions(
            name='payment',
            options={'ordering': ['-created_at'], 'verbose_name': 'Платёж', 'verbose_name_plural': 'Платежи'},
        ),
        migrations.AlterModelOptions(
            name='review',
            options={'ordering': ['-created_at'], 'verbose_name': 'Отзыв', 'verbose_name_plural': 'Отзывы'},
        ),
        migrations.RemoveConstraint(
            model_name='enrollment',
            name='uq_enrollment_user_course',
        ),
        migrations.RemoveConstraint(
            model_name='lesson',
            name='uq_lesson_module_slug',
        ),
        migrations.RemoveConstraint(
            model_name='lessonprogress',
            name='uq_lessonprogress_user_lesson',
        ),
        migrations.RemoveConstraint(
            model_name='wishlist',
            name='uq_wishlist_user_course',
        ),
        migrations.RemoveField(
            model_name='article',
            name='content',
        ),
        migrations.RemoveField(
            model_name='category',
            name='description',
        ),
        migrations.RemoveField(
            model_name='category',
            name='icon',
        ),
        migrations.RemoveField(
            model_name='category',
            name='order',
        ),
        migrations.RemoveField(
            model_name='contactmessage',
            name='is_read',
        ),
        migrations.RemoveField(
            model_name='course',
            name='certificate',
        ),
        migrations.RemoveField(
            model_name='course',
            name='is_popular',
        ),
        migrations.RemoveField(
            model_name='course',
            name='language',
        ),
        migrations.RemoveField(
            model_name='course',
            name='requirements',
        ),
        migrations.RemoveField(
            model_name='course',
            name='status',
        ),
        migrations.RemoveField(
            model_name='course',
            name='what_you_learn',
        ),
        migrations.RemoveField(
            model_name='enrollment',
            name='completed_at',
        ),
        migrations.RemoveField(
            model_name='enrollment',
            name='enrolled_at',
        ),
        migrations.RemoveField(
            model_name='instructorprofile',
            name='experience',
        ),
        migrations.RemoveField(
            model_name='instructorprofile',
            name='linkedin',
        ),
        migrations.RemoveField(
            model_name='instructorprofile',
            name='twitter',
        ),
        migrations.RemoveField(
            model_name='instructorprofile',
            name='website',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='created',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='paid_at',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='updated',
        ),
        migrations.RemoveField(
            model_name='payment',
            name='verified_at',
        ),
        migrations.RemoveField(
            model_name='review',
            name='age',
        ),
        migrations.RemoveField(
            model_name='review',
            name='name',
        ),
        migrations.RemoveField(
            model_name='review',
            name='photo',
        ),
        migrations.RemoveField(
            model_name='review',
            name='position',
        ),
        migrations.RemoveField(
            model_name='wishlist',
            name='added_at',
        ),
        migrations.AddField(
            model_name='article',
            name='body',
            field=models.TextField(blank=True, verbose_name='Текст'),
        ),
        migrations.AddField(
            model_name='article',
            name='cover',
            field=models.ImageField(blank=True, null=True, upload_to='articles/', verbose_name='Обложка'),
        ),
        migrations.AddField(
            model_name='article',
            name='seo_description',
            field=models.CharField(blank=True, max_length=500, verbose_name='SEO Description'),
        ),
        migrations.AddField(
            model_name='article',
            name='seo_keywords',
            field=models.CharField(blank=True, max_length=500, verbose_name='SEO Keywords'),
        ),
        migrations.AddField(
            model_name='article',
            name='seo_schema',
            field=models.TextField(blank=True, verbose_name='SEO Schema (JSON-LD)'),
        ),
        migrations.AddField(
            model_name='article',
            name='seo_title',
            field=models.CharField(blank=True, max_length=255, verbose_name='SEO Title'),
        ),
        migrations.AddField(
            model_name='contactmessage',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AddField(
            model_name='material',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AddField(
            model_name='material',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='materials/images/', verbose_name='Превью'),
        ),
        migrations.AddField(
            model_name='module',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AddField(
            model_name='payment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AddField(
            model_name='wishlist',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='article',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='article',
            name='published_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Опубликовано'),
        ),
        migrations.AlterField(
            model_name='article',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Слаг'),
        ),
        migrations.AlterField(
            model_name='article',
            name='status',
            field=models.CharField(choices=[('draft', 'Черновик'), ('published', 'Опубликовано')], default='draft', max_length=10, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='article',
            name='title',
            field=models.CharField(max_length=255, verbose_name='Заголовок'),
        ),
        migrations.AlterField(
            model_name='article',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='category',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(max_length=150, unique=True, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='category',
            name='slug',
            field=models.SlugField(blank=True, max_length=160, unique=True, verbose_name='Слаг'),
        ),
        migrations.AlterField(
            model_name='category',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='contactmessage',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='contactmessage',
            name='email',
            field=models.EmailField(max_length=254, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='contactmessage',
            name='message',
            field=models.TextField(verbose_name='Сообщение'),
        ),
        migrations.AlterField(
            model_name='contactmessage',
            name='name',
            field=models.CharField(max_length=120, verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='contactmessage',
            name='subject',
            field=models.CharField(max_length=200, verbose_name='Тема'),
        ),
        migrations.AlterField(
            model_name='course',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='app.category'),
        ),
        migrations.AlterField(
            model_name='course',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AlterField(
            model_name='course',
            name='duration_hours',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Длительность (часы)'),
        ),
        migrations.AlterField(
            model_name='course',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='courses/', verbose_name='Обложка'),
        ),
        migrations.AlterField(
            model_name='course',
            name='instructor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_courses', to=settings.AUTH_USER_MODEL, verbose_name='Инструктор'),
        ),
        migrations.AlterField(
            model_name='course',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='В подборке'),
        ),
        migrations.AlterField(
            model_name='course',
            name='short_description',
            field=models.CharField(blank=True, max_length=500, verbose_name='Короткое описание'),
        ),
        migrations.AlterField(
            model_name='course',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Слаг'),
        ),
        migrations.AlterField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='enrolled_courses', through='app.Enrollment', to=settings.AUTH_USER_MODEL, verbose_name='Студенты'),
        ),
        migrations.AlterField(
            model_name='course',
            name='thumbnail',
            field=models.ImageField(blank=True, null=True, upload_to='courses/thumbs/', verbose_name='Превью'),
        ),
        migrations.AlterField(
            model_name='course',
            name='title',
            field=models.CharField(max_length=255, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='course',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='completed',
            field=models.BooleanField(default=False, verbose_name='Курс завершён'),
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='app.course', verbose_name='Курс'),
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='instructorprofile',
            name='avatar',
            field=models.ImageField(blank=True, null=True, upload_to='instructors/', verbose_name='Аватар'),
        ),
        migrations.AlterField(
            model_name='instructorprofile',
            name='bio',
            field=models.TextField(blank=True, verbose_name='О себе'),
        ),
        migrations.AlterField(
            model_name='instructorprofile',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='instructorprofile',
            name='is_approved',
            field=models.BooleanField(default=True, verbose_name='Профиль подтверждён'),
        ),
        migrations.AlterField(
            model_name='instructorprofile',
            name='specialization',
            field=models.CharField(blank=True, max_length=255, verbose_name='Специализация'),
        ),
        migrations.AlterField(
            model_name='instructorprofile',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='instructorprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='duration_minutes',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Длительность (мин.)'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='app.module', verbose_name='Модуль'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='order',
            field=models.PositiveIntegerField(default=1, verbose_name='Порядок'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, verbose_name='Слаг'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='title',
            field=models.CharField(max_length=255, verbose_name='Название урока'),
        ),
        migrations.AlterField(
            model_name='lesson',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='lessonprogress',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='lessonprogress',
            name='is_completed',
            field=models.BooleanField(default=False, verbose_name='Завершён'),
        ),
        migrations.AlterField(
            model_name='lessonprogress',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='app.lesson', verbose_name='Урок'),
        ),
        migrations.AlterField(
            model_name='lessonprogress',
            name='percent',
            field=models.PositiveIntegerField(default=0, verbose_name='Прогресс, %'),
        ),
        migrations.AlterField(
            model_name='lessonprogress',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='lessonprogress',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='material',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='material',
            name='file',
            field=models.FileField(blank=True, null=True, upload_to='materials/files/', verbose_name='Файл'),
        ),
        migrations.AlterField(
            model_name='material',
            name='is_public',
            field=models.BooleanField(default=True, verbose_name='Показывать на сайте'),
        ),
        migrations.AlterField(
            model_name='material',
            name='slug',
            field=models.SlugField(max_length=220, unique=True, verbose_name='Слаг'),
        ),
        migrations.AlterField(
            model_name='material',
            name='title',
            field=models.CharField(max_length=200, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='material',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='module',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='app.course', verbose_name='Курс'),
        ),
        migrations.AlterField(
            model_name='module',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='module',
            name='order',
            field=models.PositiveIntegerField(default=1, verbose_name='Порядок'),
        ),
        migrations.AlterField(
            model_name='module',
            name='title',
            field=models.CharField(max_length=255, verbose_name='Название модуля'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Сумма'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='app.course', verbose_name='Курс'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='kaspi_invoice_id',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Kaspi invoice ID'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='receipt',
            field=models.FileField(blank=True, null=True, upload_to='payments/receipts/', verbose_name='Чек'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='status',
            field=models.CharField(choices=[('pending', 'В ожидании'), ('success', 'Успешно'), ('failed', 'Ошибка')], default='pending', max_length=16, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='review',
            name='comment',
            field=models.TextField(blank=True, verbose_name='Отзыв'),
        ),
        migrations.AlterField(
            model_name='review',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='app.course', verbose_name='Курс'),
        ),
        migrations.AlterField(
            model_name='review',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='review',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Показывать'),
        ),
        migrations.AlterField(
            model_name='review',
            name='rating',
            field=models.PositiveSmallIntegerField(default=5, verbose_name='Оценка (1–5)'),
        ),
        migrations.AlterField(
            model_name='review',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Обновлено'),
        ),
        migrations.AlterField(
            model_name='review',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlisted_in', to='app.course', verbose_name='Курс'),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Создано'),
        ),
        migrations.AlterField(
            model_name='wishlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('module', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='module',
            unique_together={('course', 'order')},
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['slug'], name='app_article_slug_f27594_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['slug'], name='app_course_slug_24512e_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['-created_at'], name='app_course_created_4cc70f_idx'),
        ),
        migrations.AddIndex(
            model_name='enrollment',
            index=models.Index(fields=['user', 'course'], name='app_enrollm_user_id_57c5bf_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['kaspi_invoice_id'], name='app_payment_kaspi_i_71e2ac_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['user', 'course'], name='app_payment_user_id_ab13a5_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['course'], name='app_review_course__20c9e5_idx'),
        ),
        migrations.AddConstraint(
            model_name='enrollment',
            constraint=models.UniqueConstraint(fields=('user', 'course'), name='uniq_enrollment_user_course'),
        ),
        migrations.AddConstraint(
            model_name='lessonprogress',
            constraint=models.UniqueConstraint(fields=('user', 'lesson'), name='uniq_progress_user_lesson'),
        ),
        migrations.AddConstraint(
            model_name='wishlist',
            constraint=models.UniqueConstraint(fields=('user', 'course'), name='uniq_wishlist_user_course'),
        ),
        migrations.DeleteModel(
            name='Subscription',
        ),
        migrations.RemoveField(
            model_name='lesson',
            name='content',
        ),
        migrations.RemoveField(
            model_name='lesson',
            name='is_free',
        ),
        migrations.RemoveField(
            model_name='lesson',
            name='resources',
        ),
        migrations.RemoveField(
            model_name='lesson',
            name='video_url',
        ),
        migrations.RemoveField(
            model_name='module',
            name='description',
        ),
    ]
