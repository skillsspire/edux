// –£–º–Ω—ã–π AI Assistant –¥–ª—è SkillsSpire —Å —Å–∏—Å—Ç–µ–º–æ–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
class AIAssistant {
    constructor() {
        this.config = {
            enableAI: true
        };
        
        // –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∫—É—Ä—Å–æ–≤
        this.knowledgeBase = [
            {
                "title": "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π", 
                "category": "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
                "price": "15 000 ‚Ç∏",
                "originalPrice": "18 000 ‚Ç∏",
                "description": "–ù–∞—É—á–∏—Ç–µ—Å—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö. –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞, –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π.",
                "rating": "4.8",
                "features": ["–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –º–æ–¥–µ–ª–∏", "–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤", "–ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π"],
                "duration": "6 –Ω–µ–¥–µ–ª—å",
                "level": "–ù–∞—á–∏–Ω–∞—é—â–∏–π",
                "instructor": "–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä —Å PhD –≤ –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–µ",
                "career": "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫, –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤, –ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö",
                "tags": ["–∞–Ω–∞–ª–∏—Ç–∏–∫–∞", "–¥–∞–Ω–Ω—ã–µ", "—Ñ–∏–Ω–∞–Ω—Å—ã", "—Ä–µ—à–µ–Ω–∏—è"]
            },
            {
                "title": "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", 
                "category": "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç",
                "price": "17 000 ‚Ç∏",
                "originalPrice": "20 000 ‚Ç∏",
                "description": "–û—Å–≤–æ–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ —Ä–æ—Å—Ç–∞ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏. –û—Ç SWOT-–∞–Ω–∞–ª–∏–∑–∞ –¥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ KPI.",
                "rating": "4.8",
                "features": ["SWOT-–∞–Ω–∞–ª–∏–∑", "KPI —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑"],
                "duration": "8 –Ω–µ–¥–µ–ª—å",
                "level": "–°—Ä–µ–¥–Ω–∏–π",
                "instructor": "–î–æ–∫—Ç–æ—Ä —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –Ω–∞—É–∫",
                "career": "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å, –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä, –í–ª–∞–¥–µ–ª–µ—Ü –±–∏–∑–Ω–µ—Å–∞",
                "tags": ["—Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ª–∏–¥–µ—Ä—Å—Ç–≤–æ"]
            },
            {
                "title": "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π", 
                "category": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏",
                "price": "12 000 ‚Ç∏",
                "originalPrice": "15 000 ‚Ç∏",
                "description": "–ù–∞—É—á–∏—Ç–µ—Å—å —á–∏—Ç–∞—Ç—å –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —É–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –∏ –≥–æ–≤–æ—Ä–∏—Ç—å —Å —Ñ–∏–Ω–∞–Ω—Å–∏—Å—Ç–∞–º–∏ –Ω–∞ –æ–¥–Ω–æ–º —è–∑—ã–∫–µ.",
                "rating": "4.8",
                "features": ["–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å", "–£–ø—Ä–∞–≤–ª–µ–Ω—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è", "–ë—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ê–Ω–∞–ª–∏–∑ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π"],
                "duration": "4 –Ω–µ–¥–µ–ª–∏",
                "level": "–ù–∞—á–∏–Ω–∞—é—â–∏–π",
                "instructor": "–ü—Ä–æ—Ñ–µ—Å—Å–æ—Ä —Ñ–∏–Ω–∞–Ω—Å–æ–≤ —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º",
                "career": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä, –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å, –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å",
                "tags": ["—Ñ–∏–Ω–∞–Ω—Å—ã", "–æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å", "–±—é–¥–∂–µ—Ç", "–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"]
            }
        ];

        // –°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        this.testSystem = {
            isActive: false,
            currentQuestion: 0,
            userAnswers: {},
            questions: [
                {
                    question: "üéØ –í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π?",
                    options: ["–ù–∞—á–∏–Ω–∞—é—â–∏–π (—Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤—ã)", "–°—Ä–µ–¥–Ω–∏–π (–µ—Å—Ç—å –æ–ø—ã—Ç)", "–û–ø—ã—Ç–Ω—ã–π (–≥–ª—É–±–æ–∫–∏–µ –∑–Ω–∞–Ω–∏—è)"],
                    key: "level"
                },
                {
                    question: "üíº –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –±–æ–ª—å—à–µ?",
                    options: ["–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª—é–¥—å–º–∏ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–∏–Ω–∞–Ω—Å—ã", "–ë–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ"],
                    key: "interest"
                },
                {
                    question: "‚è±Ô∏è –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤—ã —É–¥–µ–ª—è—Ç—å –æ–±—É—á–µ–Ω–∏—é?",
                    options: ["4 –Ω–µ–¥–µ–ª–∏ (–∏–Ω—Ç–µ–Ω—Å–∏–≤)", "6 –Ω–µ–¥–µ–ª—å (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)", "8 –Ω–µ–¥–µ–ª—å (–∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Ç–µ–º–ø)"],
                    key: "duration"
                },
                {
                    question: "üöÄ –í–∞—à–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å?",
                    options: ["–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç", "–†–∞–∑–≤–∏—Ç–∏–µ –±–∏–∑–Ω–µ—Å–∞", "–õ–∏—á–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ"],
                    key: "goal"
                }
            ]
        };

        // –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞
        this.context = {
            lastTopic: null,
            userName: null,
            userInterest: null,
            userGoal: null,
            userExperience: null,
            conversationStage: 'greeting'
        };
        
        this.chatHistory = [
            { role: "bot", text: "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ SkillsSpire!\n\n–Ø –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –∫—É—Ä—Å, –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã! üí´" }
        ];
        
        this.isFollowing = false;
        this.init();
    }

    // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã (init, bindElements, bindEvents, togglePanel –∏ —Ç.–¥.) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ...
    init() {
        this.bindElements();
        this.bindEvents();
        console.log('üéØ –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ SkillsSpire –∑–∞–≥—Ä—É–∂–µ–Ω!');
    }
    
    bindElements() {
        this.bubble = document.getElementById('ai-bubble');
        this.panel = document.getElementById('ai-panel');
        this.closeBtn = document.getElementById('ai-close');
        this.messages = document.getElementById('ai-messages');
        this.input = document.getElementById('ai-text');
        this.sendBtn = document.getElementById('ai-send');
        this.statusEl = document.getElementById('ai-status');
    }
    
    bindEvents() {
        this.bubble?.addEventListener('click', () => this.togglePanel());
        this.closeBtn?.addEventListener('click', () => this.togglePanel());
        this.sendBtn?.addEventListener('click', () => this.sendMessage());
        
        this.input?.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                this.sendMessage();
            }
        });
        
        this.input?.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });
        
        this.bubble?.addEventListener('dblclick', () => this.toggleFollowMode());
        
        document.addEventListener('click', (e) => {
            if (this.panel?.contains(e.target) || this.bubble?.contains(e.target)) return;
            if (this.panel?.style.display === 'flex') {
                this.togglePanel();
            }
        });
        
        document.addEventListener('mousemove', (e) => {
            if (this.isFollowing && this.bubble) {
                this.bubble.style.left = (e.clientX - 28) + 'px';
                this.bubble.style.top = (e.clientY - 28) + 'px';
                this.bubble.style.right = 'auto';
                this.bubble.style.bottom = 'auto';
            }
        });
    }
    
    togglePanel() {
        const isOpen = this.panel.style.display === 'flex';
        this.panel.style.display = isOpen ? 'none' : 'flex';
        this.bubble.setAttribute('aria-expanded', !isOpen);
        
        if (!isOpen) {
            this.input.focus();
            if (this.chatHistory.length === 1) {
                setTimeout(() => this.showQuickReplies(), 500);
            }
        }
    }
    
    toggleFollowMode() {
        this.isFollowing = !this.isFollowing;
        this.bubble.style.animation = this.isFollowing ? 'none' : 'floating 3s ease-in-out infinite';
        this.bubble.title = this.isFollowing ? '–†–µ–∂–∏–º —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞ –∫—É—Ä—Å–æ—Ä–æ–º' : '–ò–ò –ø–æ–º–æ—â–Ω–∏–∫ SkillsSpire';
        
        if (!this.isFollowing) {
            this.bubble.style.left = '';
            this.bubble.style.top = '';
            this.bubble.style.right = '20px';
            this.bubble.style.bottom = '20px';
        }
    }

    appendMessage(text, role = 'bot') {
        const msgDiv = document.createElement('div');
        msgDiv.className = `ai-msg ai-${role}`;
        msgDiv.textContent = text;
        this.messages.appendChild(msgDiv);
        this.messages.scrollTop = this.messages.scrollHeight;
        
        this.chatHistory.push({ role, text });
    }
    
    showTypingIndicator() {
        const typingDiv = document.createElement('div');
        typingDiv.className = 'ai-msg ai-bot ai-typing';
        typingDiv.id = 'typing-indicator';
        typingDiv.textContent = '–î—É–º–∞—é';
        this.messages.appendChild(typingDiv);
        this.messages.scrollTop = this.messages.scrollHeight;
    }
    
    hideTypingIndicator() {
        const typing = document.getElementById('typing-indicator');
        if (typing) typing.remove();
    }
    
    showQuickReplies() {
        const quickReplies = [
            "üéØ –ü–æ–¥–æ–±—Ä–∞—Ç—å –∫—É—Ä—Å –ø–æ —Ü–µ–ª—è–º",
            "üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ –∫—É—Ä—Å", 
            "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å–∫–∏–¥–∫–∏",
            "üìú –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ –¥–∏–ø–ª–æ–º—ã",
            "üöÄ –ö–∞–∫ –ø–æ–º–æ–≥–∞–µ—Ç –≤ –∫–∞—Ä—å–µ—Ä–µ",
            "üë®‚Äçüéì –ö—Ç–æ –ø—Ä–µ–ø–æ–¥–∞—ë—Ç",
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
            "üè´ –û –∫–æ–º–ø–∞–Ω–∏–∏ SkillsSpire"
        ];
        
        const quickDiv = document.createElement('div');
        quickDiv.className = 'ai-quick-replies';
        
        quickReplies.forEach(reply => {
            const btn = document.createElement('button');
            btn.textContent = reply;
            btn.onclick = () => {
                this.input.value = reply.replace(/[üéØüìùüí∞üìúüöÄüë®‚Äçüéìüìûüè´]/g, '').trim();
                this.sendMessage();
            };
            quickDiv.appendChild(btn);
        });
        
        this.messages.appendChild(quickDiv);
        this.messages.scrollTop = this.messages.scrollHeight;
    }

    // üîπ –°–ò–°–¢–ï–ú–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
    startTest() {
        this.testSystem.isActive = true;
        this.testSystem.currentQuestion = 0;
        this.testSystem.userAnswers = {};
        this.showTestQuestion();
    }

    showTestQuestion() {
        const question = this.testSystem.questions[this.testSystem.currentQuestion];
        let questionText = `üìù –í–æ–ø—Ä–æ—Å ${this.testSystem.currentQuestion + 1}/${this.testSystem.questions.length}:\n${question.question}\n\n`;
        
        question.options.forEach((option, index) => {
            questionText += `${index + 1}. ${option}\n`;
        });
        
        questionText += "\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ (1, 2, 3) –∏–ª–∏ —Ç–µ–∫—Å—Ç";
        this.appendMessage(questionText, 'bot');
    }

    processTestAnswer(userAnswer) {
        const currentQuestion = this.testSystem.questions[this.testSystem.currentQuestion];
        let answerIndex = -1;

        // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –Ω–æ–º–µ—Ä –æ—Ç–≤–µ—Ç–∞
        const numberMatch = userAnswer.match(/[123]/);
        if (numberMatch) {
            answerIndex = parseInt(numberMatch[0]) - 1;
        } else {
            // –ò—â–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
            answerIndex = currentQuestion.options.findIndex(option => 
                option.toLowerCase().includes(userAnswer.toLowerCase()) ||
                userAnswer.toLowerCase().includes(option.split(' ')[0].toLowerCase())
            );
        }

        if (answerIndex >= 0 && answerIndex < currentQuestion.options.length) {
            this.testSystem.userAnswers[currentQuestion.key] = currentQuestion.options[answerIndex];
            this.testSystem.currentQuestion++;

            if (this.testSystem.currentQuestion < this.testSystem.questions.length) {
                this.showTestQuestion();
            } else {
                this.finishTest();
            }
        } else {
            this.appendMessage("ü§î –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ (1, 2 –∏–ª–∏ 3)", 'bot');
        }
    }

    finishTest() {
        this.testSystem.isActive = false;
        const recommendation = this.generateRecommendation();
        this.appendMessage(recommendation, 'bot');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
        setTimeout(() => {
            this.showQuickReplies();
        }, 1000);
    }

    generateRecommendation() {
        const answers = this.testSystem.userAnswers;
        
        // –õ–æ–≥–∏–∫–∞ –ø–æ–¥–±–æ—Ä–∞ –∫—É—Ä—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤
        let recommendedCourse = this.knowledgeBase[2]; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ñ–∏–Ω–∞–Ω—Å—ã
        
        if (answers.interest?.includes("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª—é–¥—å–º–∏")) {
            recommendedCourse = this.knowledgeBase[1]; // –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç
        } else if (answers.interest?.includes("–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö")) {
            recommendedCourse = this.knowledgeBase[0]; // –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑
        }
        
        // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        if (answers.duration?.includes("6 –Ω–µ–¥–µ–ª—å") && recommendedCourse.duration === "6 –Ω–µ–¥–µ–ª—å") {
            recommendedCourse = this.knowledgeBase[0]; // –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑
        } else if (answers.duration?.includes("8 –Ω–µ–¥–µ–ª—å")) {
            recommendedCourse = this.knowledgeBase[1]; // –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç
        }

        return `‚úÖ –û—Ç–ª–∏—á–Ω–æ! –ü–æ –≤–∞—à–∏–º –æ—Ç–≤–µ—Ç–∞–º –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç:\n\nüéØ ${recommendedCourse.title}\n\n${recommendedCourse.description}\n\n‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${recommendedCourse.rating}/5\nüí∞ –¶–µ–Ω–∞: ${recommendedCourse.price} (—Å–∫–∏–¥–∫–∞!)\n‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${recommendedCourse.duration}\nüéì –£—Ä–æ–≤–µ–Ω—å: ${recommendedCourse.level}\n\n–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ–± —ç—Ç–æ–º –∫—É—Ä—Å–µ –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã? üòä`;
    }

    // üîπ –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ê–ù–ê–õ–ò–ó –ò–ù–¢–ï–ù–¢–û–í
    analyzeIntent(message) {
        const lowerMessage = message.toLowerCase();
        
        const intents = {
            test: /(—Ç–µ—Å—Ç|–ø–æ–¥–æ–±—Ä|—Ä–µ–∫–æ–º–µ–Ω–¥|–ø–æ—Å–æ–≤–µ—Ç|—á—Ç–æ.*–≤—ã–±—Ä|–∫–∞–∫–æ–π.*–∫—É—Ä—Å)/,
            greeting: /(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤|–¥–æ–±—Ä|—Ö–∞–π|hello|hi|—Å–∞–ª–∞–º)/,
            courses: /(–∫—É—Ä—Å|–æ–±—É—á–µ–Ω|–ø—Ä–æ–≥—Ä–∞–º–º)/,
            pricing: /(—Ü–µ–Ω–∞|—Å—Ç–æ–∏–º|–æ–ø–ª–∞—Ç|–¥–µ–Ω—å–≥|—Å–∫–æ–ª—å–∫–æ|—Å—Ç–æ–∏—Ç)/,
            contacts: /(–∫–æ–Ω—Ç–∞–∫—Ç|–ø–æ–¥–¥–µ—Ä–∂|–ø–æ–º–æ—â|—Å–≤—è–∑|—Ç–µ–ª–µ—Ñ–æ–Ω|–ø–æ—á—Ç|email)/,
            about: /(–æ.*–∫–æ–º–ø–∞–Ω|–æ.*–≤–∞—Å|skillsspire)/,
            certificate: /(—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞|–¥–æ–∫—É–º–µ–Ω—Ç|–¥–∏–ø–ª–æ–º)/,
            instructor: /(–ø—Ä–µ–ø–æ–¥–∞–≤|—É—á–∏—Ç–µ–ª—å|–ª–µ–∫—Ç–æ—Ä|–∫—Ç–æ.*—É—á–∏—Ç)/,
            career: /(–∫–∞—Ä—å–µ—Ä|—Ä–∞–±–æ—Ç|—Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π)/,
            yes: /(–¥–∞|yes|–∫–æ–Ω–µ—á–Ω–æ|—Ö–æ—á—É|–∞–≥–∞)/,
            no: /(–Ω–µ—Ç|no|–Ω–µ —Ö–æ—á—É|–Ω–µ –Ω–∞–¥–æ)/
        };
        
        for (const [intent, pattern] of Object.entries(intents)) {
            if (pattern.test(lowerMessage)) {
                return intent;
            }
        }
        
        return 'general';
    }

    // üîπ –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø –û–¢–í–ï–¢–û–í
    generateAIResponse(userMessage) {
        // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–µ–Ω —Ç–µ—Å—Ç - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
        if (this.testSystem.isActive) {
            this.processTestAnswer(userMessage);
            return null;
        }

        const intent = this.analyzeIntent(userMessage);
        const lowerMessage = userMessage.toLowerCase();

        switch (intent) {
            case 'test':
                this.startTest();
                return null;

            case 'greeting':
                return "üëã –ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å ‚Äî –ø–æ–¥–±–æ—Ä –∫—É—Ä—Å–∞, —Ü–µ–Ω—ã –∏–ª–∏ —Ç–µ—Å—Ç?";
                
            case 'courses':
                return "üìö –ù–∞—à–∏ –∫—É—Ä—Å—ã:\n\n‚Ä¢ –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π - 15 000 ‚Ç∏\n‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç - 17 000 ‚Ç∏\n‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å - 12 000 ‚Ç∏\n\n–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –¥–ª—è –ø–æ–¥–±–æ—Ä–∞?";
                
            case 'pricing':
                return "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–æ–≤:\n\n‚Ä¢ –ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏–∑ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π: 15 000 ‚Ç∏\n‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ –±–∏–∑–Ω–µ—Å-–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: 17 000 ‚Ç∏\n‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π: 12 000 ‚Ç∏\n\nüíé –í—Å–µ –∫—É—Ä—Å—ã —Å–æ —Å–∫–∏–¥–∫–∞–º–∏!";
                
            case 'contacts':
                return "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\nüìß Email: skillsspire@gmail.com\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (701) 292-55-68\nüì∏ Instagram: @skillsspire\n‚úàÔ∏è Telegram: @SkillsSpire";
                
            case 'about':
                return "üè´ –û –∫–æ–º–ø–∞–Ω–∏–∏ SkillsSpire:\n\nSkillsSpire: –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ö–ª–∞—Å—Å–∏–∫–∞, –ø–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–Ω–∞—è –¥–ª—è –±—É–¥—É—â–µ–≥–æ.";
                
            case 'certificate':
                return "üìú –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ –¥–∏–ø–ª–æ–º—ã:\n\n‚Ä¢ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏\n‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏\n‚Ä¢ –ü—Ä–∏–∑–Ω–∞–µ—Ç—Å—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è–º–∏\n‚Ä¢ –ë–æ–ª–µ–µ 100 –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤";
                
            case 'instructor':
                return "üë®‚Äçüéì –ö—Ç–æ –ø—Ä–µ–ø–æ–¥–∞—ë—Ç:\n\nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ ‚Äî –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ PhD –∏–∑ —Ç–æ–ø-—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤.";
                
            case 'career':
                return "üöÄ –ö–∞–∫ –ø–æ–º–æ–≥–∞–µ—Ç –≤ –∫–∞—Ä—å–µ—Ä–µ:\n\n‚Ä¢ 85% –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç —Ä–∞–±–æ—Ç—É –∑–∞ 3 –º–µ—Å—è—Ü–∞\n‚Ä¢ –ü–æ–º–æ—â—å —Å —Ä–µ–∑—é–º–µ –∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º–∏\n‚Ä¢ –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ –∫–æ–º–ø–∞–Ω–∏—è—Ö-–ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö\n‚Ä¢ –ö–∞—Ä—å–µ—Ä–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏";
                
            case 'yes':
                return "–û—Ç–ª–∏—á–Ω–æ! –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –∫—É—Ä—Å–∞ –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã?";
                
            case 'no':
                return "–ü–æ–Ω—è–ª! –ú–æ–∂–µ—Ç –±—ã—Ç—å, –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ? –°–ø—Ä–æ—Å–∏—Ç–µ –æ –∫—É—Ä—Å–∞—Ö, —Ü–µ–Ω–∞—Ö –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ!";
                
            default:
                if (/(–º–µ–Ω—è –∑–æ–≤—É—Ç|—è (.+))/i.test(userMessage)) {
                    const name = userMessage.match(/–º–µ–Ω—è –∑–æ–≤—É—Ç|—è (.+)/i)[1];
                    this.context.userName = name;
                    return `–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, ${name}! üòä –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`;
                }
                return "–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª ü§î –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤?";
        }
    }

    sendMessage() {
        const text = this.input.value.trim();
        if (!text) return;
        
        this.input.value = '';
        this.appendMessage(text, 'user');
        this.showTypingIndicator();
        
        const delay = this.testSystem.isActive ? 400 : 800 + Math.random() * 800;
        
        setTimeout(() => {
            this.hideTypingIndicator();
            const response = this.generateAIResponse(text);
            if (response) {
                this.appendMessage(response, 'bot');
            }
            
            if (!this.testSystem.isActive && this.chatHistory.length <= 8) {
                setTimeout(() => this.showQuickReplies(), 500);
            }
        }, delay);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    window.aiAssistant = new AIAssistant();
});